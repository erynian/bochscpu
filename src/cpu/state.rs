use serde::{Deserialize};

use crate::cpu::{GlobalSeg, Seg, Zmm};

#[derive(Clone, PartialEq, Eq, Debug, Hash, Deserialize)]
pub struct State {
    pub rax: u64,
    pub rcx: u64,
    pub rdx: u64,
    pub rbx: u64,
    pub rsp: u64,
    pub rbp: u64,
    pub rsi: u64,
    pub rdi: u64,
    pub r8: u64,
    pub r9: u64,
    pub r10: u64,
    pub r11: u64,
    pub r12: u64,
    pub r13: u64,
    pub r14: u64,
    pub r15: u64,
    pub rip: u64,
    pub rflags: u64,

    pub es: Seg,
    pub cs: Seg,
    pub ss: Seg,
    pub ds: Seg,
    pub fs: Seg,
    pub gs: Seg,

    pub ldtr: Seg,
    pub tr: Seg,
    pub gdtr: GlobalSeg,
    pub idtr: GlobalSeg,

    pub cr0: u32,
    pub cr2: u64,
    pub cr3: u64,
    pub cr4: u32,
    pub cr8: u64,

    pub dr0: u64,
    pub dr1: u64,
    pub dr2: u64,
    pub dr3: u64,
    pub dr6: u32,
    pub dr7: u32,

    pub xcr0: u32,

    pub zmm: [Zmm; 32],

    // TODO fp regs
    // TODO fp control info

    pub fpcw: u16,
    pub fpsw: u16,
    pub fptw: u16,
    pub fpop: u16,
    pub fpst: [u64; 8],

    // TODO xmm control info

    pub mxcsr: u32,
    pub mxcsr_mask: u32,

    // TODO cmm control info

    pub tsc: u64,
    pub efer: u32,
    pub kernel_gs_base: u64,
    pub apic_base: u64,
    pub pat: u64,
    pub sysenter_cs: u64,
    pub sysenter_eip: u64,
    pub sysenter_esp: u64,
    pub star: u64,
    pub lstar: u64,
    pub cstar: u64,
    pub sfmask: u64,
    pub tsc_aux: u64,
}

impl State {
    pub fn new() -> Self {
        Self {
            rip: 0,

            rax: 0,
            rcx: 0,
            rdx: 0,
            rbx: 0,
            rsp: 0,
            rbp: 0,
            rsi: 0,
            rdi: 0,
            r8: 0,
            r9: 0,
            r10: 0,
            r11: 0,
            r12: 0,
            r13: 0,
            r14: 0,
            r15: 0,
            rflags: 0,

            es: Seg { present: false, attr: 0, base: 0, limit: 0, selector: 0 },
            cs: Seg { present: false, attr: 0, base: 0, limit: 0, selector: 0 },
            ss: Seg { present: false, attr: 0, base: 0, limit: 0, selector: 0 },
            ds: Seg { present: false, attr: 0, base: 0, limit: 0, selector: 0 },
            fs: Seg { present: false, attr: 0, base: 0, limit: 0, selector: 0 },
            gs: Seg { present: false, attr: 0, base: 0, limit: 0, selector: 0 },

            ldtr: Seg { present: false, attr: 0, base: 0, limit: 0, selector: 0 },
            tr: Seg { present: false, attr: 0, base: 0, limit: 0, selector: 0 },
            gdtr: GlobalSeg { base: 0, limit: 0 },
            idtr: GlobalSeg { base: 0, limit: 0 },

            dr0: 0,
            dr1: 0,
            dr2: 0,
            dr3: 0,
            dr6: 0,
            dr7: 0,
            cr0: 0,
            cr2: 0,
            cr3: 0,
            cr4: 0,
            cr8: 0,
            xcr0: 0,
            kernel_gs_base: 0,
            sysenter_cs: 0,
            sysenter_eip: 0,
            sysenter_esp: 0,
            star: 0,
            lstar: 0,
            cstar: 0,
            efer: 0,
            sfmask: 0,
            tsc: 0,
            apic_base: 0,
            pat: 0,
            tsc_aux: 0,
            zmm: [
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                Zmm { q: [0; 8] },
                ],

                mxcsr: 0,
                mxcsr_mask: 0,

                fpcw: 0,
                fpsw: 0,
                fptw: 0,
                fpop: 0,
                fpst: [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                ],
        }
    }
}
